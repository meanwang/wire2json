// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\game.proto
package com.wesocial.apollo.protocol.protobuf.game;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * 玩家游戏结果
 */
public final class PlayerResult extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_INNER_ID = 0L;
  public static final Integer DEFAULT_RESULT = 0;
  public static final Integer DEFAULT_SCORE = 0;
  public static final Integer DEFAULT_COIN = 0;

  @ProtoField(tag = 1, type = UINT64)
  public final Long inner_id;

  /**
   * id
   */
  @ProtoField(tag = 2, type = INT32)
  public final Integer result;

  /**
   * 结果：1-胜，0平，-1负
   */
  @ProtoField(tag = 3, type = INT32)
  public final Integer score;

  /**
   * 分数
   */
  @ProtoField(tag = 4, type = INT32)
  public final Integer coin;

  public PlayerResult(Long inner_id, Integer result, Integer score, Integer coin) {
    this.inner_id = inner_id;
    this.result = result;
    this.score = score;
    this.coin = coin;
  }

  private PlayerResult(Builder builder) {
    this(builder.inner_id, builder.result, builder.score, builder.coin);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PlayerResult)) return false;
    PlayerResult o = (PlayerResult) other;
    return equals(inner_id, o.inner_id)
        && equals(result, o.result)
        && equals(score, o.score)
        && equals(coin, o.coin);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = inner_id != null ? inner_id.hashCode() : 0;
      result = result * 37 + (this.result != null ? this.result.hashCode() : 0);
      result = result * 37 + (score != null ? score.hashCode() : 0);
      result = result * 37 + (coin != null ? coin.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PlayerResult> {

    public Long inner_id;
    public Integer result;
    public Integer score;
    public Integer coin;

    public Builder() {
    }

    public Builder(PlayerResult message) {
      super(message);
      if (message == null) return;
      this.inner_id = message.inner_id;
      this.result = message.result;
      this.score = message.score;
      this.coin = message.coin;
    }

    public Builder inner_id(Long inner_id) {
      this.inner_id = inner_id;
      return this;
    }

    /**
     * id
     */
    public Builder result(Integer result) {
      this.result = result;
      return this;
    }

    /**
     * 结果：1-胜，0平，-1负
     */
    public Builder score(Integer score) {
      this.score = score;
      return this;
    }

    /**
     * 分数
     */
    public Builder coin(Integer coin) {
      this.coin = coin;
      return this;
    }

    @Override
    public PlayerResult build() {
      return new PlayerResult(this);
    }
  }
}
