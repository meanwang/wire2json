// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\game.proto
package com.wesocial.apollo.protocol.protobuf.game;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;

/**
 * 桌子状态
 */
public final class TableInfo extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_GAME_ID = 0;
  public static final Integer DEFAULT_TABLE_ID = 0;
  public static final Long DEFAULT_TABLE_SEQ = 0L;
  public static final Integer DEFAULT_GAME_STATUS = 0;
  public static final Integer DEFAULT_EMPTY_SEAT_NUM = 0;

  @ProtoField(tag = 1, type = INT32)
  public final Integer game_id;

  /**
   * 游戏ID
   */
  @ProtoField(tag = 2, type = INT32)
  public final Integer table_id;

  /**
   * 桌子编号
   */
  @ProtoField(tag = 3, type = INT64)
  public final Long table_seq;

  /**
   * 桌子的流水ID，全局唯一
   */
  @ProtoField(tag = 4, type = INT32)
  public final Integer game_status;

  /**
   * 游戏状态
   */
  @ProtoField(tag = 5, type = INT32)
  public final Integer empty_seat_num;

  public TableInfo(Integer game_id, Integer table_id, Long table_seq, Integer game_status, Integer empty_seat_num) {
    this.game_id = game_id;
    this.table_id = table_id;
    this.table_seq = table_seq;
    this.game_status = game_status;
    this.empty_seat_num = empty_seat_num;
  }

  private TableInfo(Builder builder) {
    this(builder.game_id, builder.table_id, builder.table_seq, builder.game_status, builder.empty_seat_num);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TableInfo)) return false;
    TableInfo o = (TableInfo) other;
    return equals(game_id, o.game_id)
        && equals(table_id, o.table_id)
        && equals(table_seq, o.table_seq)
        && equals(game_status, o.game_status)
        && equals(empty_seat_num, o.empty_seat_num);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = game_id != null ? game_id.hashCode() : 0;
      result = result * 37 + (table_id != null ? table_id.hashCode() : 0);
      result = result * 37 + (table_seq != null ? table_seq.hashCode() : 0);
      result = result * 37 + (game_status != null ? game_status.hashCode() : 0);
      result = result * 37 + (empty_seat_num != null ? empty_seat_num.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<TableInfo> {

    public Integer game_id;
    public Integer table_id;
    public Long table_seq;
    public Integer game_status;
    public Integer empty_seat_num;

    public Builder() {
    }

    public Builder(TableInfo message) {
      super(message);
      if (message == null) return;
      this.game_id = message.game_id;
      this.table_id = message.table_id;
      this.table_seq = message.table_seq;
      this.game_status = message.game_status;
      this.empty_seat_num = message.empty_seat_num;
    }

    public Builder game_id(Integer game_id) {
      this.game_id = game_id;
      return this;
    }

    /**
     * 游戏ID
     */
    public Builder table_id(Integer table_id) {
      this.table_id = table_id;
      return this;
    }

    /**
     * 桌子编号
     */
    public Builder table_seq(Long table_seq) {
      this.table_seq = table_seq;
      return this;
    }

    /**
     * 桌子的流水ID，全局唯一
     */
    public Builder game_status(Integer game_status) {
      this.game_status = game_status;
      return this;
    }

    /**
     * 游戏状态
     */
    public Builder empty_seat_num(Integer empty_seat_num) {
      this.empty_seat_num = empty_seat_num;
      return this;
    }

    @Override
    public TableInfo build() {
      return new TableInfo(this);
    }
  }
}
