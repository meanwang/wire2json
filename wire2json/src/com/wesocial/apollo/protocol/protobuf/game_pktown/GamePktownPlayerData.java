// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\game_pktown.proto
package com.wesocial.apollo.protocol.protobuf.game_pktown;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import com.wesocial.apollo.protocol.protobuf.game.GamePlayerInfo;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * pk场的玩家数据
 */
public final class GamePktownPlayerData extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_PLAYER_STATUS = 0;
  public static final Integer DEFAULT_SCORE = 0;
  public static final Integer DEFAULT_VERSION = 0;
  public static final Long DEFAULT_LAST_TIMESTAMP = 0L;
  public static final Integer DEFAULT_BET_COIN = 0;

  @ProtoField(tag = 1)
  public final GamePlayerInfo player_info;

  /**
   * 玩家基础信息
   */
  @ProtoField(tag = 2, type = INT32)
  public final Integer player_status;

  /**
   * 玩家状态
   */
  @ProtoField(tag = 3, type = INT32)
  public final Integer score;

  /**
   * 玩家分数
   */
  @ProtoField(tag = 4, type = INT32)
  public final Integer version;

  /**
   * 版本号
   */
  @ProtoField(tag = 5, type = UINT64)
  public final Long last_timestamp;

  /**
   * 上一次上报分数的时间戳（ms）
   */
  @ProtoField(tag = 6, type = INT32)
  public final Integer bet_coin;

  public GamePktownPlayerData(GamePlayerInfo player_info, Integer player_status, Integer score, Integer version, Long last_timestamp, Integer bet_coin) {
    this.player_info = player_info;
    this.player_status = player_status;
    this.score = score;
    this.version = version;
    this.last_timestamp = last_timestamp;
    this.bet_coin = bet_coin;
  }

  private GamePktownPlayerData(Builder builder) {
    this(builder.player_info, builder.player_status, builder.score, builder.version, builder.last_timestamp, builder.bet_coin);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GamePktownPlayerData)) return false;
    GamePktownPlayerData o = (GamePktownPlayerData) other;
    return equals(player_info, o.player_info)
        && equals(player_status, o.player_status)
        && equals(score, o.score)
        && equals(version, o.version)
        && equals(last_timestamp, o.last_timestamp)
        && equals(bet_coin, o.bet_coin);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = player_info != null ? player_info.hashCode() : 0;
      result = result * 37 + (player_status != null ? player_status.hashCode() : 0);
      result = result * 37 + (score != null ? score.hashCode() : 0);
      result = result * 37 + (version != null ? version.hashCode() : 0);
      result = result * 37 + (last_timestamp != null ? last_timestamp.hashCode() : 0);
      result = result * 37 + (bet_coin != null ? bet_coin.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GamePktownPlayerData> {

    public GamePlayerInfo player_info;
    public Integer player_status;
    public Integer score;
    public Integer version;
    public Long last_timestamp;
    public Integer bet_coin;

    public Builder() {
    }

    public Builder(GamePktownPlayerData message) {
      super(message);
      if (message == null) return;
      this.player_info = message.player_info;
      this.player_status = message.player_status;
      this.score = message.score;
      this.version = message.version;
      this.last_timestamp = message.last_timestamp;
      this.bet_coin = message.bet_coin;
    }

    public Builder player_info(GamePlayerInfo player_info) {
      this.player_info = player_info;
      return this;
    }

    /**
     * 玩家基础信息
     */
    public Builder player_status(Integer player_status) {
      this.player_status = player_status;
      return this;
    }

    /**
     * 玩家状态
     */
    public Builder score(Integer score) {
      this.score = score;
      return this;
    }

    /**
     * 玩家分数
     */
    public Builder version(Integer version) {
      this.version = version;
      return this;
    }

    /**
     * 版本号
     */
    public Builder last_timestamp(Long last_timestamp) {
      this.last_timestamp = last_timestamp;
      return this;
    }

    /**
     * 上一次上报分数的时间戳（ms）
     */
    public Builder bet_coin(Integer bet_coin) {
      this.bet_coin = bet_coin;
      return this;
    }

    @Override
    public GamePktownPlayerData build() {
      return new GamePktownPlayerData(this);
    }
  }
}
