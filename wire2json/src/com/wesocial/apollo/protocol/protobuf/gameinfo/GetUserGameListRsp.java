// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\gameinfo.proto
package com.wesocial.apollo.protocol.protobuf.gameinfo;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Label.REPEATED;

public final class GetUserGameListRsp extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_RESERVED_BUF = ByteString.EMPTY;
  public static final List<GameRankInfo> DEFAULT_RANK_GAME_LIST = Collections.emptyList();
  public static final Integer DEFAULT_TOTAL_NUM = 0;
  public static final Integer DEFAULT_HAS_MORE = 0;

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString reserved_buf;

  /**
   * 服务端使用，客户端忽略
   */
  @ProtoField(tag = 2, label = REPEATED, messageType = GameRankInfo.class)
  public final List<GameRankInfo> rank_game_list;

  /**
   * 带分数的用户游戏列表
   */
  @ProtoField(tag = 3, type = INT32)
  public final Integer total_num;

  /**
   * 游戏总数
   */
  @ProtoField(tag = 4, type = INT32)
  public final Integer has_more;

  public GetUserGameListRsp(ByteString reserved_buf, List<GameRankInfo> rank_game_list, Integer total_num, Integer has_more) {
    this.reserved_buf = reserved_buf;
    this.rank_game_list = immutableCopyOf(rank_game_list);
    this.total_num = total_num;
    this.has_more = has_more;
  }

  private GetUserGameListRsp(Builder builder) {
    this(builder.reserved_buf, builder.rank_game_list, builder.total_num, builder.has_more);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetUserGameListRsp)) return false;
    GetUserGameListRsp o = (GetUserGameListRsp) other;
    return equals(reserved_buf, o.reserved_buf)
        && equals(rank_game_list, o.rank_game_list)
        && equals(total_num, o.total_num)
        && equals(has_more, o.has_more);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = reserved_buf != null ? reserved_buf.hashCode() : 0;
      result = result * 37 + (rank_game_list != null ? rank_game_list.hashCode() : 1);
      result = result * 37 + (total_num != null ? total_num.hashCode() : 0);
      result = result * 37 + (has_more != null ? has_more.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GetUserGameListRsp> {

    public ByteString reserved_buf;
    public List<GameRankInfo> rank_game_list;
    public Integer total_num;
    public Integer has_more;

    public Builder() {
    }

    public Builder(GetUserGameListRsp message) {
      super(message);
      if (message == null) return;
      this.reserved_buf = message.reserved_buf;
      this.rank_game_list = copyOf(message.rank_game_list);
      this.total_num = message.total_num;
      this.has_more = message.has_more;
    }

    public Builder reserved_buf(ByteString reserved_buf) {
      this.reserved_buf = reserved_buf;
      return this;
    }

    /**
     * 服务端使用，客户端忽略
     */
    public Builder rank_game_list(List<GameRankInfo> rank_game_list) {
      this.rank_game_list = checkForNulls(rank_game_list);
      return this;
    }

    /**
     * 带分数的用户游戏列表
     */
    public Builder total_num(Integer total_num) {
      this.total_num = total_num;
      return this;
    }

    /**
     * 游戏总数
     */
    public Builder has_more(Integer has_more) {
      this.has_more = has_more;
      return this;
    }

    @Override
    public GetUserGameListRsp build() {
      return new GetUserGameListRsp(this);
    }
  }
}
