// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\gameinfo.proto
package com.wesocial.apollo.protocol.protobuf.gameinfo;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.INT32;

/**
 * -------------------------------------------------------------
 * 1. 相关常量定义
 * -------------------------------------------------------------
 * -------------------------------------------------------------
 * 2. 相关基础结构体
 * -------------------------------------------------------------
 * 场次信息
 */
public final class PolicyDetail extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_POLICY_TYPE = 0;
  public static final Integer DEFAULT_POLICY_COIN_NUM = 0;
  public static final Integer DEFAULT_PRIZE_COIN_NUM = 0;
  public static final ByteString DEFAULT_EXTRA_INFO = ByteString.EMPTY;

  @ProtoField(tag = 1, type = INT32)
  public final Integer policy_type;

  /**
   * 场次id
   */
  @ProtoField(tag = 2, type = INT32)
  public final Integer policy_coin_num;

  /**
   * 入场需要金币数
   */
  @ProtoField(tag = 3, type = INT32)
  public final Integer prize_coin_num;

  /**
   * 第一名奖励金币数
   */
  @ProtoField(tag = 4, type = BYTES)
  public final ByteString extra_info;

  public PolicyDetail(Integer policy_type, Integer policy_coin_num, Integer prize_coin_num, ByteString extra_info) {
    this.policy_type = policy_type;
    this.policy_coin_num = policy_coin_num;
    this.prize_coin_num = prize_coin_num;
    this.extra_info = extra_info;
  }

  private PolicyDetail(Builder builder) {
    this(builder.policy_type, builder.policy_coin_num, builder.prize_coin_num, builder.extra_info);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PolicyDetail)) return false;
    PolicyDetail o = (PolicyDetail) other;
    return equals(policy_type, o.policy_type)
        && equals(policy_coin_num, o.policy_coin_num)
        && equals(prize_coin_num, o.prize_coin_num)
        && equals(extra_info, o.extra_info);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = policy_type != null ? policy_type.hashCode() : 0;
      result = result * 37 + (policy_coin_num != null ? policy_coin_num.hashCode() : 0);
      result = result * 37 + (prize_coin_num != null ? prize_coin_num.hashCode() : 0);
      result = result * 37 + (extra_info != null ? extra_info.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PolicyDetail> {

    public Integer policy_type;
    public Integer policy_coin_num;
    public Integer prize_coin_num;
    public ByteString extra_info;

    public Builder() {
    }

    public Builder(PolicyDetail message) {
      super(message);
      if (message == null) return;
      this.policy_type = message.policy_type;
      this.policy_coin_num = message.policy_coin_num;
      this.prize_coin_num = message.prize_coin_num;
      this.extra_info = message.extra_info;
    }

    public Builder policy_type(Integer policy_type) {
      this.policy_type = policy_type;
      return this;
    }

    /**
     * 场次id
     */
    public Builder policy_coin_num(Integer policy_coin_num) {
      this.policy_coin_num = policy_coin_num;
      return this;
    }

    /**
     * 入场需要金币数
     */
    public Builder prize_coin_num(Integer prize_coin_num) {
      this.prize_coin_num = prize_coin_num;
      return this;
    }

    /**
     * 第一名奖励金币数
     */
    public Builder extra_info(ByteString extra_info) {
      this.extra_info = extra_info;
      return this;
    }

    @Override
    public PolicyDetail build() {
      return new PolicyDetail(this);
    }
  }
}
