// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\lbs.proto
package com.wesocial.apollo.protocol.protobuf.lbs;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.FLOAT;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.UINT32;

/**
 * ////////////////////////////////////////////////////////////////////////////
 * 附近的人&附近玩某游戏的人
 * cmd = GET_NEARBY_PERSONAL
 */
public final class NearbyPersonReq extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_RESERVED_BUF = ByteString.EMPTY;
  public static final Integer DEFAULT_TYPE = 0;
  public static final Long DEFAULT_TIMESTAMP = 0L;
  public static final Float DEFAULT_LATITUDE = 0F;
  public static final Float DEFAULT_LONGITUDE = 0F;
  public static final Integer DEFAULT_SEX = 0;
  public static final Integer DEFAULT_REQ_NUM = 0;
  public static final Float DEFAULT_DISTANCE = 0F;
  public static final Integer DEFAULT_GAME_ID = 0;

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString reserved_buf;

  /**
   * 服务端使用，客户端忽略
   */
  @ProtoField(tag = 2, type = INT32)
  public final Integer type;

  /**
   * 1 - 刷新 2 - 更多
   */
  @ProtoField(tag = 3, type = INT64)
  public final Long timestamp;

  /**
   * type = 2时有效 (<= timestamp, 毫秒级别, 客户端需要排重)
   */
  @ProtoField(tag = 4, type = FLOAT)
  public final Float latitude;

  /**
   * 当前位置的纬度信息
   */
  @ProtoField(tag = 5, type = FLOAT)
  public final Float longitude;

  /**
   * 当前位置的经度信息
   */
  @ProtoField(tag = 6, type = INT32)
  public final Integer sex;

  /**
   * 性别 1 - 男 2 - 女 3 - 不区分
   */
  @ProtoField(tag = 7, type = UINT32)
  public final Integer req_num;

  /**
   * 拉取的数目 (每次不超过20)
   */
  @ProtoField(tag = 8, type = FLOAT)
  public final Float distance;

  /**
   * type=2时有效 (>=distance, 客户端需要排重)
   */
  @ProtoField(tag = 9, type = INT32)
  public final Integer game_id;

  public NearbyPersonReq(ByteString reserved_buf, Integer type, Long timestamp, Float latitude, Float longitude, Integer sex, Integer req_num, Float distance, Integer game_id) {
    this.reserved_buf = reserved_buf;
    this.type = type;
    this.timestamp = timestamp;
    this.latitude = latitude;
    this.longitude = longitude;
    this.sex = sex;
    this.req_num = req_num;
    this.distance = distance;
    this.game_id = game_id;
  }

  private NearbyPersonReq(Builder builder) {
    this(builder.reserved_buf, builder.type, builder.timestamp, builder.latitude, builder.longitude, builder.sex, builder.req_num, builder.distance, builder.game_id);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NearbyPersonReq)) return false;
    NearbyPersonReq o = (NearbyPersonReq) other;
    return equals(reserved_buf, o.reserved_buf)
        && equals(type, o.type)
        && equals(timestamp, o.timestamp)
        && equals(latitude, o.latitude)
        && equals(longitude, o.longitude)
        && equals(sex, o.sex)
        && equals(req_num, o.req_num)
        && equals(distance, o.distance)
        && equals(game_id, o.game_id);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = reserved_buf != null ? reserved_buf.hashCode() : 0;
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (timestamp != null ? timestamp.hashCode() : 0);
      result = result * 37 + (latitude != null ? latitude.hashCode() : 0);
      result = result * 37 + (longitude != null ? longitude.hashCode() : 0);
      result = result * 37 + (sex != null ? sex.hashCode() : 0);
      result = result * 37 + (req_num != null ? req_num.hashCode() : 0);
      result = result * 37 + (distance != null ? distance.hashCode() : 0);
      result = result * 37 + (game_id != null ? game_id.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<NearbyPersonReq> {

    public ByteString reserved_buf;
    public Integer type;
    public Long timestamp;
    public Float latitude;
    public Float longitude;
    public Integer sex;
    public Integer req_num;
    public Float distance;
    public Integer game_id;

    public Builder() {
    }

    public Builder(NearbyPersonReq message) {
      super(message);
      if (message == null) return;
      this.reserved_buf = message.reserved_buf;
      this.type = message.type;
      this.timestamp = message.timestamp;
      this.latitude = message.latitude;
      this.longitude = message.longitude;
      this.sex = message.sex;
      this.req_num = message.req_num;
      this.distance = message.distance;
      this.game_id = message.game_id;
    }

    public Builder reserved_buf(ByteString reserved_buf) {
      this.reserved_buf = reserved_buf;
      return this;
    }

    /**
     * 服务端使用，客户端忽略
     */
    public Builder type(Integer type) {
      this.type = type;
      return this;
    }

    /**
     * 1 - 刷新 2 - 更多
     */
    public Builder timestamp(Long timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    /**
     * type = 2时有效 (<= timestamp, 毫秒级别, 客户端需要排重)
     */
    public Builder latitude(Float latitude) {
      this.latitude = latitude;
      return this;
    }

    /**
     * 当前位置的纬度信息
     */
    public Builder longitude(Float longitude) {
      this.longitude = longitude;
      return this;
    }

    /**
     * 当前位置的经度信息
     */
    public Builder sex(Integer sex) {
      this.sex = sex;
      return this;
    }

    /**
     * 性别 1 - 男 2 - 女 3 - 不区分
     */
    public Builder req_num(Integer req_num) {
      this.req_num = req_num;
      return this;
    }

    /**
     * 拉取的数目 (每次不超过20)
     */
    public Builder distance(Float distance) {
      this.distance = distance;
      return this;
    }

    /**
     * type=2时有效 (>=distance, 客户端需要排重)
     */
    public Builder game_id(Integer game_id) {
      this.game_id = game_id;
      return this;
    }

    @Override
    public NearbyPersonReq build() {
      return new NearbyPersonReq(this);
    }
  }
}
