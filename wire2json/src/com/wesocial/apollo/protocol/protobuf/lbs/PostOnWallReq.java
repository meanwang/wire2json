// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\lbs.proto
package com.wesocial.apollo.protocol.protobuf.lbs;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.FLOAT;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * ////////////////////////////////////////////////////////////////////////////
 * cmd = POST_ON_WALL
 */
public final class PostOnWallReq extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_RESERVED_BUF = ByteString.EMPTY;
  public static final Integer DEFAULT_TYPE = 0;
  public static final Float DEFAULT_LATITUDE = 0F;
  public static final Float DEFAULT_LONGITUDE = 0F;
  public static final Long DEFAULT_FLOWER_NUM = 0L;

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString reserved_buf;

  /**
   * 服务端使用，客户端忽略
   */
  @ProtoField(tag = 2, type = INT32)
  public final Integer type;

  /**
   * 1 - 系统注册发布上墙 2 - 用户自己发布上墙 3 - 送花上墙
   */
  @ProtoField(tag = 3, type = FLOAT)
  public final Float latitude;

  /**
   * 非必须
   */
  @ProtoField(tag = 4, type = FLOAT)
  public final Float longitude;

  @ProtoField(tag = 5, type = UINT64)
  public final Long flower_num;

  public PostOnWallReq(ByteString reserved_buf, Integer type, Float latitude, Float longitude, Long flower_num) {
    this.reserved_buf = reserved_buf;
    this.type = type;
    this.latitude = latitude;
    this.longitude = longitude;
    this.flower_num = flower_num;
  }

  private PostOnWallReq(Builder builder) {
    this(builder.reserved_buf, builder.type, builder.latitude, builder.longitude, builder.flower_num);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PostOnWallReq)) return false;
    PostOnWallReq o = (PostOnWallReq) other;
    return equals(reserved_buf, o.reserved_buf)
        && equals(type, o.type)
        && equals(latitude, o.latitude)
        && equals(longitude, o.longitude)
        && equals(flower_num, o.flower_num);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = reserved_buf != null ? reserved_buf.hashCode() : 0;
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (latitude != null ? latitude.hashCode() : 0);
      result = result * 37 + (longitude != null ? longitude.hashCode() : 0);
      result = result * 37 + (flower_num != null ? flower_num.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PostOnWallReq> {

    public ByteString reserved_buf;
    public Integer type;
    public Float latitude;
    public Float longitude;
    public Long flower_num;

    public Builder() {
    }

    public Builder(PostOnWallReq message) {
      super(message);
      if (message == null) return;
      this.reserved_buf = message.reserved_buf;
      this.type = message.type;
      this.latitude = message.latitude;
      this.longitude = message.longitude;
      this.flower_num = message.flower_num;
    }

    public Builder reserved_buf(ByteString reserved_buf) {
      this.reserved_buf = reserved_buf;
      return this;
    }

    /**
     * 服务端使用，客户端忽略
     */
    public Builder type(Integer type) {
      this.type = type;
      return this;
    }

    /**
     * 1 - 系统注册发布上墙 2 - 用户自己发布上墙 3 - 送花上墙
     */
    public Builder latitude(Float latitude) {
      this.latitude = latitude;
      return this;
    }

    /**
     * 非必须
     */
    public Builder longitude(Float longitude) {
      this.longitude = longitude;
      return this;
    }

    public Builder flower_num(Long flower_num) {
      this.flower_num = flower_num;
      return this;
    }

    @Override
    public PostOnWallReq build() {
      return new PostOnWallReq(this);
    }
  }
}
