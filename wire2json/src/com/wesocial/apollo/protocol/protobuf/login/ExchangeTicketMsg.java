// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\login.proto
package com.wesocial.apollo.protocol.protobuf.login;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;

public final class ExchangeTicketMsg extends Message {
  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_LOGIN_ID = "";
  public static final String DEFAULT_MD5_PASSWD = "";
  public static final Integer DEFAULT_TIMESTAMP = 0;
  public static final ByteString DEFAULT_TICKET = ByteString.EMPTY;

  @ProtoField(tag = 1, type = STRING)
  public final String login_id;

  /**
   * login_id
   */
  @ProtoField(tag = 2, type = STRING)
  public final String md5_passwd;

  /**
   * passwd
   */
  @ProtoField(tag = 3, type = UINT32)
  public final Integer timestamp;

  /**
   * 时戳(client本地时戳)
   */
  @ProtoField(tag = 4, type = BYTES)
  public final ByteString ticket;

  public ExchangeTicketMsg(String login_id, String md5_passwd, Integer timestamp, ByteString ticket) {
    this.login_id = login_id;
    this.md5_passwd = md5_passwd;
    this.timestamp = timestamp;
    this.ticket = ticket;
  }

  private ExchangeTicketMsg(Builder builder) {
    this(builder.login_id, builder.md5_passwd, builder.timestamp, builder.ticket);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ExchangeTicketMsg)) return false;
    ExchangeTicketMsg o = (ExchangeTicketMsg) other;
    return equals(login_id, o.login_id)
        && equals(md5_passwd, o.md5_passwd)
        && equals(timestamp, o.timestamp)
        && equals(ticket, o.ticket);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = login_id != null ? login_id.hashCode() : 0;
      result = result * 37 + (md5_passwd != null ? md5_passwd.hashCode() : 0);
      result = result * 37 + (timestamp != null ? timestamp.hashCode() : 0);
      result = result * 37 + (ticket != null ? ticket.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ExchangeTicketMsg> {

    public String login_id;
    public String md5_passwd;
    public Integer timestamp;
    public ByteString ticket;

    public Builder() {
    }

    public Builder(ExchangeTicketMsg message) {
      super(message);
      if (message == null) return;
      this.login_id = message.login_id;
      this.md5_passwd = message.md5_passwd;
      this.timestamp = message.timestamp;
      this.ticket = message.ticket;
    }

    public Builder login_id(String login_id) {
      this.login_id = login_id;
      return this;
    }

    /**
     * login_id
     */
    public Builder md5_passwd(String md5_passwd) {
      this.md5_passwd = md5_passwd;
      return this;
    }

    /**
     * passwd
     */
    public Builder timestamp(Integer timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    /**
     * 时戳(client本地时戳)
     */
    public Builder ticket(ByteString ticket) {
      this.ticket = ticket;
      return this;
    }

    @Override
    public ExchangeTicketMsg build() {
      return new ExchangeTicketMsg(this);
    }
  }
}
