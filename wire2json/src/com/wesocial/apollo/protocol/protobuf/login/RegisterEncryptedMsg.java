// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\login.proto
package com.wesocial.apollo.protocol.protobuf.login;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

public final class RegisterEncryptedMsg extends Message {
  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_LOGIN_ID = "";
  public static final String DEFAULT_MD5_PASSWD = "";
  public static final String DEFAULT_VERIFY_CODE = "";
  public static final Integer DEFAULT_OPER_TYPE = 1;
  public static final String DEFAULT_ACCESS_TOKEN = "";

  @ProtoField(tag = 1, type = STRING)
  public final String login_id;

  /**
   * login_id (mobile_number|openid)
   */
  @ProtoField(tag = 2, type = STRING)
  public final String md5_passwd;

  /**
   * passwd的md5值| mobile available
   */
  @ProtoField(tag = 3, type = STRING)
  public final String verify_code;

  /**
   * 手机注册时使用
   */
  @ProtoField(tag = 4, type = INT32)
  public final Integer oper_type;

  /**
   * 1 - 新注册，2 - 修改密码
   */
  @ProtoField(tag = 5, type = STRING)
  public final String access_token;

  public RegisterEncryptedMsg(String login_id, String md5_passwd, String verify_code, Integer oper_type, String access_token) {
    this.login_id = login_id;
    this.md5_passwd = md5_passwd;
    this.verify_code = verify_code;
    this.oper_type = oper_type;
    this.access_token = access_token;
  }

  private RegisterEncryptedMsg(Builder builder) {
    this(builder.login_id, builder.md5_passwd, builder.verify_code, builder.oper_type, builder.access_token);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RegisterEncryptedMsg)) return false;
    RegisterEncryptedMsg o = (RegisterEncryptedMsg) other;
    return equals(login_id, o.login_id)
        && equals(md5_passwd, o.md5_passwd)
        && equals(verify_code, o.verify_code)
        && equals(oper_type, o.oper_type)
        && equals(access_token, o.access_token);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = login_id != null ? login_id.hashCode() : 0;
      result = result * 37 + (md5_passwd != null ? md5_passwd.hashCode() : 0);
      result = result * 37 + (verify_code != null ? verify_code.hashCode() : 0);
      result = result * 37 + (oper_type != null ? oper_type.hashCode() : 0);
      result = result * 37 + (access_token != null ? access_token.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<RegisterEncryptedMsg> {

    public String login_id;
    public String md5_passwd;
    public String verify_code;
    public Integer oper_type;
    public String access_token;

    public Builder() {
    }

    public Builder(RegisterEncryptedMsg message) {
      super(message);
      if (message == null) return;
      this.login_id = message.login_id;
      this.md5_passwd = message.md5_passwd;
      this.verify_code = message.verify_code;
      this.oper_type = message.oper_type;
      this.access_token = message.access_token;
    }

    public Builder login_id(String login_id) {
      this.login_id = login_id;
      return this;
    }

    /**
     * login_id (mobile_number|openid)
     */
    public Builder md5_passwd(String md5_passwd) {
      this.md5_passwd = md5_passwd;
      return this;
    }

    /**
     * passwd的md5值| mobile available
     */
    public Builder verify_code(String verify_code) {
      this.verify_code = verify_code;
      return this;
    }

    /**
     * 手机注册时使用
     */
    public Builder oper_type(Integer oper_type) {
      this.oper_type = oper_type;
      return this;
    }

    /**
     * 1 - 新注册，2 - 修改密码
     */
    public Builder access_token(String access_token) {
      this.access_token = access_token;
      return this;
    }

    @Override
    public RegisterEncryptedMsg build() {
      return new RegisterEncryptedMsg(this);
    }
  }
}
