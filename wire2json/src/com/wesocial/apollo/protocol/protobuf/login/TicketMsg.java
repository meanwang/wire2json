// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\login.proto
package com.wesocial.apollo.protocol.protobuf.login;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.UINT32;

public final class TicketMsg extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_TICKET = ByteString.EMPTY;
  public static final Integer DEFAULT_EXPIRED_TIME = 0;
  public static final ByteString DEFAULT_SESSION_KEY = ByteString.EMPTY;

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString ticket;

  /**
   * 票据
   */
  @ProtoField(tag = 2, type = UINT32)
  public final Integer expired_time;

  /**
   * 票据失效时间
   */
  @ProtoField(tag = 3, type = BYTES)
  public final ByteString session_key;

  public TicketMsg(ByteString ticket, Integer expired_time, ByteString session_key) {
    this.ticket = ticket;
    this.expired_time = expired_time;
    this.session_key = session_key;
  }

  private TicketMsg(Builder builder) {
    this(builder.ticket, builder.expired_time, builder.session_key);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof TicketMsg)) return false;
    TicketMsg o = (TicketMsg) other;
    return equals(ticket, o.ticket)
        && equals(expired_time, o.expired_time)
        && equals(session_key, o.session_key);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = ticket != null ? ticket.hashCode() : 0;
      result = result * 37 + (expired_time != null ? expired_time.hashCode() : 0);
      result = result * 37 + (session_key != null ? session_key.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<TicketMsg> {

    public ByteString ticket;
    public Integer expired_time;
    public ByteString session_key;

    public Builder() {
    }

    public Builder(TicketMsg message) {
      super(message);
      if (message == null) return;
      this.ticket = message.ticket;
      this.expired_time = message.expired_time;
      this.session_key = message.session_key;
    }

    public Builder ticket(ByteString ticket) {
      this.ticket = ticket;
      return this;
    }

    /**
     * 票据
     */
    public Builder expired_time(Integer expired_time) {
      this.expired_time = expired_time;
      return this;
    }

    /**
     * 票据失效时间
     */
    public Builder session_key(ByteString session_key) {
      this.session_key = session_key;
      return this;
    }

    @Override
    public TicketMsg build() {
      return new TicketMsg(this);
    }
  }
}
