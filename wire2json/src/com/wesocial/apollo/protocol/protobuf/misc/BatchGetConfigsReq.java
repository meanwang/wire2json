// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\misc.proto
package com.wesocial.apollo.protocol.protobuf.misc;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

public final class BatchGetConfigsReq extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_RESERVED_BUF = ByteString.EMPTY;
  public static final List<String> DEFAULT_KEY_LIST = Collections.emptyList();
  public static final List<Integer> DEFAULT_VERSION_LIST = Collections.emptyList();

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString reserved_buf;

  /**
   * 服务端使用，客户端忽略
   */
  @ProtoField(tag = 2, type = STRING, label = REPEATED)
  public final List<String> key_list;

  /**
   * 需要访问的配置项的key list
   */
  @ProtoField(tag = 3, type = INT32, label = REPEATED)
  public final List<Integer> version_list;

  public BatchGetConfigsReq(ByteString reserved_buf, List<String> key_list, List<Integer> version_list) {
    this.reserved_buf = reserved_buf;
    this.key_list = immutableCopyOf(key_list);
    this.version_list = immutableCopyOf(version_list);
  }

  private BatchGetConfigsReq(Builder builder) {
    this(builder.reserved_buf, builder.key_list, builder.version_list);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BatchGetConfigsReq)) return false;
    BatchGetConfigsReq o = (BatchGetConfigsReq) other;
    return equals(reserved_buf, o.reserved_buf)
        && equals(key_list, o.key_list)
        && equals(version_list, o.version_list);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = reserved_buf != null ? reserved_buf.hashCode() : 0;
      result = result * 37 + (key_list != null ? key_list.hashCode() : 1);
      result = result * 37 + (version_list != null ? version_list.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<BatchGetConfigsReq> {

    public ByteString reserved_buf;
    public List<String> key_list;
    public List<Integer> version_list;

    public Builder() {
    }

    public Builder(BatchGetConfigsReq message) {
      super(message);
      if (message == null) return;
      this.reserved_buf = message.reserved_buf;
      this.key_list = copyOf(message.key_list);
      this.version_list = copyOf(message.version_list);
    }

    public Builder reserved_buf(ByteString reserved_buf) {
      this.reserved_buf = reserved_buf;
      return this;
    }

    /**
     * 服务端使用，客户端忽略
     */
    public Builder key_list(List<String> key_list) {
      this.key_list = checkForNulls(key_list);
      return this;
    }

    /**
     * 需要访问的配置项的key list
     */
    public Builder version_list(List<Integer> version_list) {
      this.version_list = checkForNulls(version_list);
      return this;
    }

    @Override
    public BatchGetConfigsReq build() {
      return new BatchGetConfigsReq(this);
    }
  }
}
