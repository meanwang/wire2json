// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\pay.proto
package com.wesocial.apollo.protocol.protobuf.pay;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.UINT32;

public final class ExchangeGameCoinRsp extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_RESERVED_BUF = ByteString.EMPTY;
  public static final Integer DEFAULT_REST_DIAMOND_NUM = 0;
  public static final Integer DEFAULT_INCR_GAME_COIN_NUM = 0;
  public static final Integer DEFAULT_GAME_COIN_NUM = 0;

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString reserved_buf;

  /**
   * 服务端使用，客户端忽略
   */
  @ProtoField(tag = 2, type = UINT32)
  public final Integer rest_diamond_num;

  /**
   * 剩余的钻石
   */
  @ProtoField(tag = 3, type = UINT32)
  public final Integer incr_game_coin_num;

  /**
   * 新增游戏币数
   */
  @ProtoField(tag = 4, type = UINT32)
  public final Integer game_coin_num;

  public ExchangeGameCoinRsp(ByteString reserved_buf, Integer rest_diamond_num, Integer incr_game_coin_num, Integer game_coin_num) {
    this.reserved_buf = reserved_buf;
    this.rest_diamond_num = rest_diamond_num;
    this.incr_game_coin_num = incr_game_coin_num;
    this.game_coin_num = game_coin_num;
  }

  private ExchangeGameCoinRsp(Builder builder) {
    this(builder.reserved_buf, builder.rest_diamond_num, builder.incr_game_coin_num, builder.game_coin_num);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ExchangeGameCoinRsp)) return false;
    ExchangeGameCoinRsp o = (ExchangeGameCoinRsp) other;
    return equals(reserved_buf, o.reserved_buf)
        && equals(rest_diamond_num, o.rest_diamond_num)
        && equals(incr_game_coin_num, o.incr_game_coin_num)
        && equals(game_coin_num, o.game_coin_num);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = reserved_buf != null ? reserved_buf.hashCode() : 0;
      result = result * 37 + (rest_diamond_num != null ? rest_diamond_num.hashCode() : 0);
      result = result * 37 + (incr_game_coin_num != null ? incr_game_coin_num.hashCode() : 0);
      result = result * 37 + (game_coin_num != null ? game_coin_num.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ExchangeGameCoinRsp> {

    public ByteString reserved_buf;
    public Integer rest_diamond_num;
    public Integer incr_game_coin_num;
    public Integer game_coin_num;

    public Builder() {
    }

    public Builder(ExchangeGameCoinRsp message) {
      super(message);
      if (message == null) return;
      this.reserved_buf = message.reserved_buf;
      this.rest_diamond_num = message.rest_diamond_num;
      this.incr_game_coin_num = message.incr_game_coin_num;
      this.game_coin_num = message.game_coin_num;
    }

    public Builder reserved_buf(ByteString reserved_buf) {
      this.reserved_buf = reserved_buf;
      return this;
    }

    /**
     * 服务端使用，客户端忽略
     */
    public Builder rest_diamond_num(Integer rest_diamond_num) {
      this.rest_diamond_num = rest_diamond_num;
      return this;
    }

    /**
     * 剩余的钻石
     */
    public Builder incr_game_coin_num(Integer incr_game_coin_num) {
      this.incr_game_coin_num = incr_game_coin_num;
      return this;
    }

    /**
     * 新增游戏币数
     */
    public Builder game_coin_num(Integer game_coin_num) {
      this.game_coin_num = game_coin_num;
      return this;
    }

    @Override
    public ExchangeGameCoinRsp build() {
      return new ExchangeGameCoinRsp(this);
    }
  }
}
