// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\pay.proto
package com.wesocial.apollo.protocol.protobuf.pay;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.INT32;

public final class GetBalanceRsp extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_RESERVED_BUF = ByteString.EMPTY;
  public static final Integer DEFAULT_DIAMOND_NUM = 0;
  public static final Integer DEFAULT_CHARM_NUM = 0;
  public static final Integer DEFAULT_GAME_COIN_NUM = 0;

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString reserved_buf;

  @ProtoField(tag = 2, type = INT32)
  public final Integer diamond_num;

  /**
   * 钻石
   */
  @ProtoField(tag = 3, type = INT32)
  public final Integer charm_num;

  /**
   * 魅力值
   */
  @ProtoField(tag = 4, type = INT32)
  public final Integer game_coin_num;

  public GetBalanceRsp(ByteString reserved_buf, Integer diamond_num, Integer charm_num, Integer game_coin_num) {
    this.reserved_buf = reserved_buf;
    this.diamond_num = diamond_num;
    this.charm_num = charm_num;
    this.game_coin_num = game_coin_num;
  }

  private GetBalanceRsp(Builder builder) {
    this(builder.reserved_buf, builder.diamond_num, builder.charm_num, builder.game_coin_num);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetBalanceRsp)) return false;
    GetBalanceRsp o = (GetBalanceRsp) other;
    return equals(reserved_buf, o.reserved_buf)
        && equals(diamond_num, o.diamond_num)
        && equals(charm_num, o.charm_num)
        && equals(game_coin_num, o.game_coin_num);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = reserved_buf != null ? reserved_buf.hashCode() : 0;
      result = result * 37 + (diamond_num != null ? diamond_num.hashCode() : 0);
      result = result * 37 + (charm_num != null ? charm_num.hashCode() : 0);
      result = result * 37 + (game_coin_num != null ? game_coin_num.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GetBalanceRsp> {

    public ByteString reserved_buf;
    public Integer diamond_num;
    public Integer charm_num;
    public Integer game_coin_num;

    public Builder() {
    }

    public Builder(GetBalanceRsp message) {
      super(message);
      if (message == null) return;
      this.reserved_buf = message.reserved_buf;
      this.diamond_num = message.diamond_num;
      this.charm_num = message.charm_num;
      this.game_coin_num = message.game_coin_num;
    }

    public Builder reserved_buf(ByteString reserved_buf) {
      this.reserved_buf = reserved_buf;
      return this;
    }

    public Builder diamond_num(Integer diamond_num) {
      this.diamond_num = diamond_num;
      return this;
    }

    /**
     * 钻石
     */
    public Builder charm_num(Integer charm_num) {
      this.charm_num = charm_num;
      return this;
    }

    /**
     * 魅力值
     */
    public Builder game_coin_num(Integer game_coin_num) {
      this.game_coin_num = game_coin_num;
      return this;
    }

    @Override
    public GetBalanceRsp build() {
      return new GetBalanceRsp(this);
    }
  }
}
