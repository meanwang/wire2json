// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\profile.proto
package com.wesocial.apollo.protocol.protobuf.profile;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.UINT32;

public final class LoginRsp extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_RESERVED_BUF = ByteString.EMPTY;
  public static final Integer DEFAULT_FLOWER_NUM = 0;
  public static final Integer DEFAULT_NEW_ADD = 0;
  public static final Integer DEFAULT_CONTINUE_DAYS = 0;
  public static final Integer DEFAULT_CUMULATIVE_DAYS = 0;
  public static final Integer DEFAULT_LAST_TAKE_LOTTERY_TIME = 0;
  public static final Integer DEFAULT_LAST_SHARED_TAKE_LOTTERY_TIME = 0;

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString reserved_buf;

  /**
   * 服务端使用，客户端忽略
   * 总的花的数量
   */
  @ProtoField(tag = 2, type = INT32)
  public final Integer flower_num;

  /**
   * 新增的花的数量
   */
  @ProtoField(tag = 3, type = INT32)
  public final Integer new_add;

  /**
   * 连续登录天数
   */
  @ProtoField(tag = 4, type = INT32)
  public final Integer continue_days;

  /**
   * 累计登录天数
   */
  @ProtoField(tag = 5, type = INT32)
  public final Integer cumulative_days;

  @ProtoField(tag = 6, type = UINT32)
  public final Integer last_take_lottery_time;

  /**
   * 上一次抽奖时间
   */
  @ProtoField(tag = 7, type = UINT32)
  public final Integer last_shared_take_lottery_time;

  public LoginRsp(ByteString reserved_buf, Integer flower_num, Integer new_add, Integer continue_days, Integer cumulative_days, Integer last_take_lottery_time, Integer last_shared_take_lottery_time) {
    this.reserved_buf = reserved_buf;
    this.flower_num = flower_num;
    this.new_add = new_add;
    this.continue_days = continue_days;
    this.cumulative_days = cumulative_days;
    this.last_take_lottery_time = last_take_lottery_time;
    this.last_shared_take_lottery_time = last_shared_take_lottery_time;
  }

  private LoginRsp(Builder builder) {
    this(builder.reserved_buf, builder.flower_num, builder.new_add, builder.continue_days, builder.cumulative_days, builder.last_take_lottery_time, builder.last_shared_take_lottery_time);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof LoginRsp)) return false;
    LoginRsp o = (LoginRsp) other;
    return equals(reserved_buf, o.reserved_buf)
        && equals(flower_num, o.flower_num)
        && equals(new_add, o.new_add)
        && equals(continue_days, o.continue_days)
        && equals(cumulative_days, o.cumulative_days)
        && equals(last_take_lottery_time, o.last_take_lottery_time)
        && equals(last_shared_take_lottery_time, o.last_shared_take_lottery_time);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = reserved_buf != null ? reserved_buf.hashCode() : 0;
      result = result * 37 + (flower_num != null ? flower_num.hashCode() : 0);
      result = result * 37 + (new_add != null ? new_add.hashCode() : 0);
      result = result * 37 + (continue_days != null ? continue_days.hashCode() : 0);
      result = result * 37 + (cumulative_days != null ? cumulative_days.hashCode() : 0);
      result = result * 37 + (last_take_lottery_time != null ? last_take_lottery_time.hashCode() : 0);
      result = result * 37 + (last_shared_take_lottery_time != null ? last_shared_take_lottery_time.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<LoginRsp> {

    public ByteString reserved_buf;
    public Integer flower_num;
    public Integer new_add;
    public Integer continue_days;
    public Integer cumulative_days;
    public Integer last_take_lottery_time;
    public Integer last_shared_take_lottery_time;

    public Builder() {
    }

    public Builder(LoginRsp message) {
      super(message);
      if (message == null) return;
      this.reserved_buf = message.reserved_buf;
      this.flower_num = message.flower_num;
      this.new_add = message.new_add;
      this.continue_days = message.continue_days;
      this.cumulative_days = message.cumulative_days;
      this.last_take_lottery_time = message.last_take_lottery_time;
      this.last_shared_take_lottery_time = message.last_shared_take_lottery_time;
    }

    public Builder reserved_buf(ByteString reserved_buf) {
      this.reserved_buf = reserved_buf;
      return this;
    }

    /**
     * 服务端使用，客户端忽略
     * 总的花的数量
     */
    public Builder flower_num(Integer flower_num) {
      this.flower_num = flower_num;
      return this;
    }

    /**
     * 新增的花的数量
     */
    public Builder new_add(Integer new_add) {
      this.new_add = new_add;
      return this;
    }

    /**
     * 连续登录天数
     */
    public Builder continue_days(Integer continue_days) {
      this.continue_days = continue_days;
      return this;
    }

    /**
     * 累计登录天数
     */
    public Builder cumulative_days(Integer cumulative_days) {
      this.cumulative_days = cumulative_days;
      return this;
    }

    public Builder last_take_lottery_time(Integer last_take_lottery_time) {
      this.last_take_lottery_time = last_take_lottery_time;
      return this;
    }

    /**
     * 上一次抽奖时间
     */
    public Builder last_shared_take_lottery_time(Integer last_shared_take_lottery_time) {
      this.last_shared_take_lottery_time = last_shared_take_lottery_time;
      return this;
    }

    @Override
    public LoginRsp build() {
      return new LoginRsp(this);
    }
  }
}
