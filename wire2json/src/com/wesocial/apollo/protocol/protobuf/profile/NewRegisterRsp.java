// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\profile.proto
package com.wesocial.apollo.protocol.protobuf.profile;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.UINT64;

public final class NewRegisterRsp extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_RESERVED_BUF = ByteString.EMPTY;
  public static final Long DEFAULT_INNER_ID = 0L;
  public static final Integer DEFAULT_REGISTER_TYPE = 0;
  public static final Long DEFAULT_TIMESTAMP = 0L;

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString reserved_buf;

  /**
   * 服务端使用，客户端忽略
   */
  @ProtoField(tag = 2, type = UINT64)
  public final Long inner_id;

  @ProtoField(tag = 3, type = INT32)
  public final Integer register_type;

  @ProtoField(tag = 4, type = INT64)
  public final Long timestamp;

  public NewRegisterRsp(ByteString reserved_buf, Long inner_id, Integer register_type, Long timestamp) {
    this.reserved_buf = reserved_buf;
    this.inner_id = inner_id;
    this.register_type = register_type;
    this.timestamp = timestamp;
  }

  private NewRegisterRsp(Builder builder) {
    this(builder.reserved_buf, builder.inner_id, builder.register_type, builder.timestamp);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof NewRegisterRsp)) return false;
    NewRegisterRsp o = (NewRegisterRsp) other;
    return equals(reserved_buf, o.reserved_buf)
        && equals(inner_id, o.inner_id)
        && equals(register_type, o.register_type)
        && equals(timestamp, o.timestamp);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = reserved_buf != null ? reserved_buf.hashCode() : 0;
      result = result * 37 + (inner_id != null ? inner_id.hashCode() : 0);
      result = result * 37 + (register_type != null ? register_type.hashCode() : 0);
      result = result * 37 + (timestamp != null ? timestamp.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<NewRegisterRsp> {

    public ByteString reserved_buf;
    public Long inner_id;
    public Integer register_type;
    public Long timestamp;

    public Builder() {
    }

    public Builder(NewRegisterRsp message) {
      super(message);
      if (message == null) return;
      this.reserved_buf = message.reserved_buf;
      this.inner_id = message.inner_id;
      this.register_type = message.register_type;
      this.timestamp = message.timestamp;
    }

    public Builder reserved_buf(ByteString reserved_buf) {
      this.reserved_buf = reserved_buf;
      return this;
    }

    /**
     * 服务端使用，客户端忽略
     */
    public Builder inner_id(Long inner_id) {
      this.inner_id = inner_id;
      return this;
    }

    public Builder register_type(Integer register_type) {
      this.register_type = register_type;
      return this;
    }

    public Builder timestamp(Long timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @Override
    public NewRegisterRsp build() {
      return new NewRegisterRsp(this);
    }
  }
}
