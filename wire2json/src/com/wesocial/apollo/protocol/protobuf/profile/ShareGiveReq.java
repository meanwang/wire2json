// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\profile.proto
package com.wesocial.apollo.protocol.protobuf.profile;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.INT32;

/**
 * VIII. 分享送花
 * CMD为SHARE_GIVE (104)
 */
public final class ShareGiveReq extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_RESERVED_BUF = ByteString.EMPTY;
  public static final Integer DEFAULT_SHARE_TYPE = 0;

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString reserved_buf;

  /**
   * 服务端使用，客户端忽略
   */
  @ProtoField(tag = 2, type = INT32)
  public final Integer share_type;

  public ShareGiveReq(ByteString reserved_buf, Integer share_type) {
    this.reserved_buf = reserved_buf;
    this.share_type = share_type;
  }

  private ShareGiveReq(Builder builder) {
    this(builder.reserved_buf, builder.share_type);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ShareGiveReq)) return false;
    ShareGiveReq o = (ShareGiveReq) other;
    return equals(reserved_buf, o.reserved_buf)
        && equals(share_type, o.share_type);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = reserved_buf != null ? reserved_buf.hashCode() : 0;
      result = result * 37 + (share_type != null ? share_type.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<ShareGiveReq> {

    public ByteString reserved_buf;
    public Integer share_type;

    public Builder() {
    }

    public Builder(ShareGiveReq message) {
      super(message);
      if (message == null) return;
      this.reserved_buf = message.reserved_buf;
      this.share_type = message.share_type;
    }

    public Builder reserved_buf(ByteString reserved_buf) {
      this.reserved_buf = reserved_buf;
      return this;
    }

    /**
     * 服务端使用，客户端忽略
     */
    public Builder share_type(Integer share_type) {
      this.share_type = share_type;
      return this;
    }

    @Override
    public ShareGiveReq build() {
      return new ShareGiveReq(this);
    }
  }
}
