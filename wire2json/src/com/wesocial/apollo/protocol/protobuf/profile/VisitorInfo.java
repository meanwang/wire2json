// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\profile.proto
package com.wesocial.apollo.protocol.protobuf.profile;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * 访客基础信息
 */
public final class VisitorInfo extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_INNER_ID = 0L;
  public static final Integer DEFAULT_TIME = 0;

  @ProtoField(tag = 1, type = UINT64)
  public final Long inner_id;

  /**
   * 访客inner_id
   */
  @ProtoField(tag = 2, type = UINT32)
  public final Integer time;

  public VisitorInfo(Long inner_id, Integer time) {
    this.inner_id = inner_id;
    this.time = time;
  }

  private VisitorInfo(Builder builder) {
    this(builder.inner_id, builder.time);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof VisitorInfo)) return false;
    VisitorInfo o = (VisitorInfo) other;
    return equals(inner_id, o.inner_id)
        && equals(time, o.time);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = inner_id != null ? inner_id.hashCode() : 0;
      result = result * 37 + (time != null ? time.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<VisitorInfo> {

    public Long inner_id;
    public Integer time;

    public Builder() {
    }

    public Builder(VisitorInfo message) {
      super(message);
      if (message == null) return;
      this.inner_id = message.inner_id;
      this.time = message.time;
    }

    public Builder inner_id(Long inner_id) {
      this.inner_id = inner_id;
      return this;
    }

    /**
     * 访客inner_id
     */
    public Builder time(Integer time) {
      this.time = time;
      return this;
    }

    @Override
    public VisitorInfo build() {
      return new VisitorInfo(this);
    }
  }
}
