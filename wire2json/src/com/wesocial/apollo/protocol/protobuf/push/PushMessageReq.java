// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\push.proto
package com.wesocial.apollo.protocol.protobuf.push;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * III. 服务端推送命令
 * 对于有新的好友状态变更的情况，用位来标识哪几种好友状态发生了变更
 * 对于离线推送消息，可以用extra_val来保存文字描述信息
 */
public final class PushMessageReq extends Message {
  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_RESERVED_BUF = ByteString.EMPTY;
  public static final Long DEFAULT_INNER_ID = 0L;
  public static final Integer DEFAULT_PUSH_CMD = 0;
  public static final Long DEFAULT_EXTRA_INT = 0L;
  public static final ByteString DEFAULT_EXTRA_VAL = ByteString.EMPTY;

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString reserved_buf;

  /**
   * 服务端使用，客户端忽略
   */
  @ProtoField(tag = 2, type = UINT64)
  public final Long inner_id;

  /**
   * 推送对象的inner id
   */
  @ProtoField(tag = 3, type = INT32)
  public final Integer push_cmd;

  /**
   * 推送的命令字
   */
  @ProtoField(tag = 4, type = UINT64)
  public final Long extra_int;

  /**
   * 命令字相关的额外信息（int类型）
   */
  @ProtoField(tag = 5, type = BYTES)
  public final ByteString extra_val;

  public PushMessageReq(ByteString reserved_buf, Long inner_id, Integer push_cmd, Long extra_int, ByteString extra_val) {
    this.reserved_buf = reserved_buf;
    this.inner_id = inner_id;
    this.push_cmd = push_cmd;
    this.extra_int = extra_int;
    this.extra_val = extra_val;
  }

  private PushMessageReq(Builder builder) {
    this(builder.reserved_buf, builder.inner_id, builder.push_cmd, builder.extra_int, builder.extra_val);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PushMessageReq)) return false;
    PushMessageReq o = (PushMessageReq) other;
    return equals(reserved_buf, o.reserved_buf)
        && equals(inner_id, o.inner_id)
        && equals(push_cmd, o.push_cmd)
        && equals(extra_int, o.extra_int)
        && equals(extra_val, o.extra_val);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = reserved_buf != null ? reserved_buf.hashCode() : 0;
      result = result * 37 + (inner_id != null ? inner_id.hashCode() : 0);
      result = result * 37 + (push_cmd != null ? push_cmd.hashCode() : 0);
      result = result * 37 + (extra_int != null ? extra_int.hashCode() : 0);
      result = result * 37 + (extra_val != null ? extra_val.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PushMessageReq> {

    public ByteString reserved_buf;
    public Long inner_id;
    public Integer push_cmd;
    public Long extra_int;
    public ByteString extra_val;

    public Builder() {
    }

    public Builder(PushMessageReq message) {
      super(message);
      if (message == null) return;
      this.reserved_buf = message.reserved_buf;
      this.inner_id = message.inner_id;
      this.push_cmd = message.push_cmd;
      this.extra_int = message.extra_int;
      this.extra_val = message.extra_val;
    }

    public Builder reserved_buf(ByteString reserved_buf) {
      this.reserved_buf = reserved_buf;
      return this;
    }

    /**
     * 服务端使用，客户端忽略
     */
    public Builder inner_id(Long inner_id) {
      this.inner_id = inner_id;
      return this;
    }

    /**
     * 推送对象的inner id
     */
    public Builder push_cmd(Integer push_cmd) {
      this.push_cmd = push_cmd;
      return this;
    }

    /**
     * 推送的命令字
     */
    public Builder extra_int(Long extra_int) {
      this.extra_int = extra_int;
      return this;
    }

    /**
     * 命令字相关的额外信息（int类型）
     */
    public Builder extra_val(ByteString extra_val) {
      this.extra_val = extra_val;
      return this;
    }

    @Override
    public PushMessageReq build() {
      return new PushMessageReq(this);
    }
  }
}
