// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\rank.proto
package com.wesocial.apollo.protocol.protobuf.rank;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import com.wesocial.apollo.protocol.protobuf.profile.AllUserInfo;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.UINT64;

/**
 * 游戏 分数和排名
 */
public final class RankRecord extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_INNER_ID = 0L;
  public static final Integer DEFAULT_SCORE = 0;
  public static final Integer DEFAULT_RANK = 0;
  public static final Long DEFAULT_UPDATE_TIME = 0L;

  @ProtoField(tag = 1, type = UINT64)
  public final Long inner_id;

  @ProtoField(tag = 2, type = INT32)
  public final Integer score;

  @ProtoField(tag = 3, type = INT32)
  public final Integer rank;

  @ProtoField(tag = 4, type = INT64)
  public final Long update_time;

  @ProtoField(tag = 5)
  public final AllUserInfo user_info;

  public RankRecord(Long inner_id, Integer score, Integer rank, Long update_time, AllUserInfo user_info) {
    this.inner_id = inner_id;
    this.score = score;
    this.rank = rank;
    this.update_time = update_time;
    this.user_info = user_info;
  }

  private RankRecord(Builder builder) {
    this(builder.inner_id, builder.score, builder.rank, builder.update_time, builder.user_info);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RankRecord)) return false;
    RankRecord o = (RankRecord) other;
    return equals(inner_id, o.inner_id)
        && equals(score, o.score)
        && equals(rank, o.rank)
        && equals(update_time, o.update_time)
        && equals(user_info, o.user_info);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = inner_id != null ? inner_id.hashCode() : 0;
      result = result * 37 + (score != null ? score.hashCode() : 0);
      result = result * 37 + (rank != null ? rank.hashCode() : 0);
      result = result * 37 + (update_time != null ? update_time.hashCode() : 0);
      result = result * 37 + (user_info != null ? user_info.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<RankRecord> {

    public Long inner_id;
    public Integer score;
    public Integer rank;
    public Long update_time;
    public AllUserInfo user_info;

    public Builder() {
    }

    public Builder(RankRecord message) {
      super(message);
      if (message == null) return;
      this.inner_id = message.inner_id;
      this.score = message.score;
      this.rank = message.rank;
      this.update_time = message.update_time;
      this.user_info = message.user_info;
    }

    public Builder inner_id(Long inner_id) {
      this.inner_id = inner_id;
      return this;
    }

    public Builder score(Integer score) {
      this.score = score;
      return this;
    }

    public Builder rank(Integer rank) {
      this.rank = rank;
      return this;
    }

    public Builder update_time(Long update_time) {
      this.update_time = update_time;
      return this;
    }

    public Builder user_info(AllUserInfo user_info) {
      this.user_info = user_info;
      return this;
    }

    @Override
    public RankRecord build() {
      return new RankRecord(this);
    }
  }
}
